#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

START_MESSAGE="-----> Follow symlinks to actual files buildpack"

IS_CHANGED=false

if [ -f $ENV_DIR/PROJECT_PATH ]; then
	PROJECT_PATH=`cat $ENV_DIR/PROJECT_PATH`
	if [ -d $BUILD_DIR/$PROJECT_PATH ]; then
	  echo "$START_MESSAGE in $PROJECT_PATH"
	  cd $BUILD_DIR/$PROJECT_PATH
	  IS_CHANGED=true
  fi
fi

if [ ! $IS_CHANGED ]; then
  if [ -f $BUILD_DIR ]; then
    echo $START_MESSAGE
    cd $BUILD_DIR
	  IS_CHANGED=true
  fi
fi

if [ ! $IS_CHANGED ]; then
  echo "$START_MESSAGE in current direcotry: $(pwd)"
fi

# Initialize git repos for `git ls-files` command.
# These are idempotence.
git init
git add .

SYMBOLIC_LINKS=$(git ls-files | xargs -IXXX find XXX -type l)
echo $SYMBOLIC_LINKS

for f in $SYMBOLIC_LINKS; do
  # XXX: you can use ./scripts/greadlink insteadof `readlink -f` if on macOS.
  SRC=$(readlink -f ${f})
  DEST=$(echo ${f})

  unlink ${DEST}
  echo $SRC
  echo $DEST
  cp -r ${SRC} ${DEST}
done

exit 0
